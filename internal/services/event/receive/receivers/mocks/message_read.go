// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/event/receive/receivers/message_read.go

// Package mock_receivers is a generated GoMock package.
package mock_receivers

import (
	net "net"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockwsServiceInterface is a mock of wsServiceInterface interface.
type MockwsServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockwsServiceInterfaceMockRecorder
}

// MockwsServiceInterfaceMockRecorder is the mock recorder for MockwsServiceInterface.
type MockwsServiceInterfaceMockRecorder struct {
	mock *MockwsServiceInterface
}

// NewMockwsServiceInterface creates a new mock instance.
func NewMockwsServiceInterface(ctrl *gomock.Controller) *MockwsServiceInterface {
	mock := &MockwsServiceInterface{ctrl: ctrl}
	mock.recorder = &MockwsServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockwsServiceInterface) EXPECT() *MockwsServiceInterfaceMockRecorder {
	return m.recorder
}

// WriteClientBinary mocks base method.
func (m *MockwsServiceInterface) WriteClientBinary(msg []byte, conn net.Conn) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteClientBinary", msg, conn)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteClientBinary indicates an expected call of WriteClientBinary.
func (mr *MockwsServiceInterfaceMockRecorder) WriteClientBinary(msg, conn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteClientBinary", reflect.TypeOf((*MockwsServiceInterface)(nil).WriteClientBinary), msg, conn)
}
